// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int        @id @default(autoincrement())
  firstname      String     @db.VarChar(255)
  lastname       String     @db.VarChar(255)
  phone          String?    @db.VarChar(20)
  email          String     @unique @db.VarChar(255)
  hashedPassword String     @db.VarChar(255)
  Animal         Animal[]
  History        History[]
  Favorite       Favorite[]
}

model AnimalCategory {
  id     Int      @id @default(autoincrement())
  name   String   @unique @db.VarChar(255)
  Food   Food[]
  Animal Animal[]
}

model Breed {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(255)
  speciesId Int
  Animal    Animal[]
}

model FoodType {
  id   Int    @id @default(autoincrement())
  name String @unique @db.VarChar(255)
  Food Food[]
}

model Food {
  id                              Int                 @id @default(autoincrement())
  brand                           String              @db.VarChar(255)
  name                            String              @db.VarChar(255)
  foodTypeId                      Int?
  FoodType                        FoodType?           @relation(fields: [foodTypeId], references: [id])
  animalCategoryId                Int?
  AnimalCategory                  AnimalCategory?     @relation(fields: [animalCategoryId], references: [id])
  image                           String?             @db.VarChar(255)
  amazonPrice                     Decimal?            @db.Decimal(10, 2)
  zooplusPrice                    Decimal?            @db.Decimal(10, 2)
  croquettelandPrice              Decimal?            @db.Decimal(10, 2)
  amazonLastpriceTimeStamp        DateTime?
  zooplusLastpriceTimeStamp       DateTime?
  croquettelandLastpriceTimeStamp DateTime?
  History                         History[]
  Favorite                        Favorite[]
  AnimalCurrentFood               AnimalCurrentFood[]
}

model Animal {
  id                 Int                  @id @default(autoincrement())
  name               String               @unique @db.VarChar(255)
  image              String?              @db.VarChar(255)
  ownerId            Int
  Owner              User                 @relation(fields: [ownerId], references: [id])
  animalCategoryId   Int?
  AnimalCategory     AnimalCategory?      @relation(fields: [animalCategoryId], references: [id])
  breedId            Int?
  Breed              Breed?               @relation(fields: [breedId], references: [id])
  AnimalFavoriteFood AnimalFavoriteFood[]
  AnimalCurrentFood  AnimalCurrentFood[]
}

model Favorite {
  id                 Int                  @id @default(autoincrement())
  userId             Int
  User               User                 @relation(fields: [userId], references: [id])
  foodId             Int
  FoodHistory        Food                 @relation(fields: [foodId], references: [id])
  History            History[]
  AnimalFavoriteFood AnimalFavoriteFood[]
}

model History {
  id          Int       @id @default(autoincrement())
  consultedAt DateTime
  userId      Int
  User        User      @relation(fields: [userId], references: [id])
  foodId      Int
  Food        Food      @relation(fields: [foodId], references: [id])
  favoriteId  Int?
  Favorites   Favorite? @relation(fields: [favoriteId], references: [id])
}

model AnimalFavoriteFood {
  id         Int      @id @default(autoincrement())
  animalId   Int
  Animal     Animal   @relation(fields: [animalId], references: [id])
  favoriteId Int
  Favorites  Favorite @relation(fields: [favoriteId], references: [id])
}

model AnimalCurrentFood {
  id       Int    @id @default(autoincrement())
  animalId Int
  Animal   Animal @relation(fields: [animalId], references: [id])
  foodId   Int
  Food     Food   @relation(fields: [foodId], references: [id])
}
